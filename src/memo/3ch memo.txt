사용 lib
1)prop-types


1. 컴포넌트
 1) 컴포넌트 구성요소 : 프로퍼티, state, 컨텍스트
    A. 프로퍼티 : 상위 컴포넌트에서 하위 컴포넌트로 전달하는 읽기 전용 방식
    B. state : 컴포넌트의 상태를 저장하고 변경할 수 있는 데이터
    C. 컨텍스트 : 부모 컴포넌트에서 생성하여 모든 자식 컴포넌트에 전달하는 데이터

2. 불리언 사용 법
  1) const tp = this.props.board ? '참일 경우 실행' : '거짓일 경우 실행';
    <BooleanComponent board /> ==> 참  <BooleanComponent /> ==> 거짓

3. state
  1) state사용 시 주의할 점
    A. 생성자에서 반드시 초기화해야 한다.
    B. state값을 변경할 때는 setState()함수를 반드시 사용해야 한다. 
    C. setState()함수는 비동기로 처리되며 setState()코드 이후 연결된 함수들의 
       실행이 완료된 시점에 화면 동기화 과정을 거친다. 
  2)setState를 사용하지 않으면 render함수를 불러오지 않아 바뀐 내용이 적용이 안된다.

4. 컴포넌트 생명주기
  1) 컴포넌트 생성
    A. constructor : 생성자 / 초기상태 설정
    B. render() : 새 화면을 그릴 때 자동호출되는 함수
    C. static getDerivedStateFromProps(props,state)
      : 상위 컴포넌트에서 전달받은 프로퍼티로 state값을 연동할 때 사용
    D. componentDidMount() : 화면에 컴포넌트가 모두 표기된 이후 처리할 일.
  2) 생성 완료
    A. shouldComponentUpdate(nextProps, nextState)
      : 프로퍼티를 변경하거나 setState()를 호출하여서 state를 변경하면 화면에 출력할지
         판단하는 함수.
    B. getSnapshotBeforeUpdate(prevProps, prevState)
      : 컴포넌트의 변경된 내용이 가상 화면에 완성된 이후 호출되는 함수.
        화면에 출력되기 전에 불려진다. 
        화면에 출력될 엘리먼트의 크기 또는 스크롤 위치 등 Dom 정보에 접근할 때 사용
    C. componentDidUpdate(prePorps, prevState, snapshot)
      : 컴포넌트가 실제 화면에 출력된 후 호출되는 함수
  3) 갱신 완료
    A. componentWillUnmont()
      : 컴포넌트에서 감시하고 있는 작업들을 해체할 때 필요한 함수.
  4) 소멸 완료
